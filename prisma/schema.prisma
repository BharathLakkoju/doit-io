// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  TOBE
  IN_PROGRESS
  COMPLETED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

model User {
  id            String      @id @default(cuid())
  name          String
  email         String      @unique
  image         String?
  password      String?
  emailVerified String?
  accounts      Account[]
  tasks         Task[]      @relation("UserTasks")
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  guestbook     guestbook[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Task {
  id          String       @id @default(cuid())
  title       String
  description String?
  status      TaskStatus   @default(TOBE)
  tags        String[]
  priority    TaskPriority @default(LOW)
  isImportant Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  userId      String
  user        User         @relation("UserTasks", fields: [userId], references: [id])

  @@index([userId])
}

model guestbook {
  id        String   @id @default(cuid())
  text      String
  userName  String
  userId    String
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}
